#!/usr/bin/env python
# Author: Xiaoyong Guo
import os
import stat
import sys
import re
import subprocess


def listdir(pathname):
  files_and_dirs = [os.path.join(pathname, entry) \
                    for entry in os.listdir(pathname)]
  files = [one_file for one_file in files_and_dirs \
           if stat.S_ISREG(os.stat(one_file).st_mode)]
  dirs = [one_dir for one_dir in files_and_dirs \
          if stat.S_ISDIR(os.stat(one_dir).st_mode)]
  if len(dirs) == 0:
    return files, dirs
  else:
    sub_files, sub_dirs = zip(*[listdir(dir) for dir in dirs])
    return sum(sub_files, files), sum(sub_dirs, dirs)

  
def getsha1(filename):
  pattern = re.compile('([0-9a-f]{2})/([0-9a-f]{38})', re.I)
  match = pattern.search(filename)
  if match:
    return match.group(1)+match.group(2)
  else:
    return None


def get_topdir():
  cmd = ['git', 'rev-parse', '--show-toplevel']
  topdir = subprocess.check_output(cmd).strip()
  return topdir

  
def runcmd(filename):
  cmd = ['git', 'cat-file', '-t', filename]
  obj_type = subprocess.check_output(cmd).strip()
  print "%s: %s" % (filename, obj_type)


def main(argv):
  files, dirs = listdir(get_topdir())
  sha1s = [getsha1(filename) for filename in files if getsha1(filename)]
  for sha1 in sha1s:
    runcmd(sha1)


if __name__ == "__main__":
  main(sys.argv)
