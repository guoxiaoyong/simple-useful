#!/usr/bin/env python

from __future__ import print_function

import datetime
import pytz
import sys


SHANGHAI_TZ = pytz.timezone('Asia/Shanghai')


def timestamp2datetime(timestamp, tz=None):
  min_dt = datetime.datetime.fromtimestamp(3600*24*365, tz)
  max_dt = min_dt + datetime.timedelta(days=200*365)

  all_possible_date = []

  try:
    dt = datetime.datetime.fromtimestamp(timestamp, tz)
    if min_dt <= dt < max_dt:
      all_possible_date.append([dt, 'sec'])
  except:
    pass

  try:
    dt = datetime.datetime.fromtimestamp(timestamp/10.0**3, tz)
    if min_dt <= dt < max_dt:
      all_possible_date.append([dt, 'mili sec'])
  except:
    pass

  try:
    dt = datetime.datetime.fromtimestamp(timestamp/10.0**6, tz)
    if min_dt <= dt < max_dt:
      all_possible_date.append([dt, 'micro sec'])
  except:
    pass

  try:
    dt = datetime.datetime.fromtimestamp(timestamp/10.0**9, tz)
    if min_dt <= dt < max_dt:
      all_possible_date.append([dt, 'nano sec'])
  except:
    raise ValueError('Invalid timestamp!')

  return all_possible_date


def print_usage():
  dt = datetime.datetime.now()
  tm = dt.timestamp()
  print(dt)
  print(tm)
  print(int(tm*(10**3)))
  print(int(tm*(10**6)))
  print(int(tm*(10**9)))


def main(argv):
  if len(argv) == 2:
    timestamp = int(float(sys.argv[1]))
    for dt in timestamp2datetime(timestamp, SHANGHAI_TZ):
      print(dt[0])
      print(dt[1])
  else:
    print_usage()


if __name__ == "__main__":
  sys.exit(main(sys.argv))
